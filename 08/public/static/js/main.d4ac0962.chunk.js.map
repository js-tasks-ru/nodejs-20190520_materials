{"version":3,"sources":["serviceWorker.js","network.js","store/actions.js","components/Chat.js","store/reducer.js","store/index.js","components/Home.js","components/SocialButtons.js","components/Form.js","components/Login.js","components/OAuthCallback.js","components/Register.js","components/Confirm.js","index.js"],"names":["Boolean","window","location","hostname","match","axios","create","LoginRequest","Symbol","LoginFailure","LoginSuccess","RegisterRequest","RegisterFailure","RegisterSuccess","ConfirmRequest","ConfirmFailure","ConfirmSuccess","OAuthRequest","OAuthFailure","OAuthCallbackRequest","OAuthCallbackFailure","OAuthCallbackSuccess","FetchMeRequest","FetchMeSuccess","FetchMeFailure","fetchMe","dispatch","getState","type","token","client","get","headers","Authorization","concat","then","response","data","catch","error","status","localStorage","removeItem","reload","console","FetchMessagesRequest","FetchMessagesSuccess","FetchMessagesFailure","fetchMessages","messages","WebsocketConnected","WebsocketDisconnected","NewMessage","socket","connect","state","me","isWebsocketConnected","Object","objectSpread","bindActionCreators","_ref","_useState","useState","_useState2","slicedToArray","message","setMessage","chatHistory","useRef","messagesList","useEffect","io","on","current","scrollTop","scrollHeight","react_default","a","createElement","className","style","minHeight","display","flexDirection","fetching","displayName","ref","role","list","length","map","date","d","Date","getHours","getMinutes","formatDate","class","user","text","onSubmit","event","preventDefault","emit","disabled","value","onChange","target","placeholder","rows","initialState","getItem","login","processing","registration","errors","complete","confirmation","oauth","oauthCallback","createStore","arguments","undefined","action","setItem","applyMiddleware","thunkMiddleware","rest","objectWithoutProperties","react_router","assign","render","components_Chat","to","mapDispatchToProps","oauthAction","_ref4","provider","href","getOAuthLink","onClick","Form","props","changeState","setValue","defineProperty","name","noValidate","title","fields","field","inputClassname","key","required","button","Footer","components_SocialButtons","icon","loginAction","email","password","post","validated","react_router_dom","providerMap","vkontakte","fb","github","oauthCallbackAction","_ref5","code","params","URLSearchParams","search","Fragment","registerAction","_ref2","confirmAction","_ref3","verificationToken","ReactDOM","es","store","exact","path","component","Home","Login","OAuthCallback","Register","Confirm","document","getElementById","navigator","serviceWorker","ready","unregister"],"mappings":"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","file":"static/js/main.d4ac0962.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import axios from 'axios';\n\nexport default axios.create();\n","import client from '../network';\n\nexport const LoginRequest = Symbol('LoginRequest');\nexport const LoginFailure = Symbol('LoginFailure');\nexport const LoginSuccess = Symbol('LoginSuccess');\n\nexport function login({email, password}) {\n  return (dispatch, getState) => {\n    dispatch({type: LoginRequest});\n    \n    client.post('/api/login', {\n      email, password\n    }).then(response => {\n      dispatch({type: LoginSuccess, token: response.data.token});\n    }).catch(error => {\n      dispatch({type: LoginFailure, error: error.response.data.error});\n    });\n  }\n}\n\nexport const RegisterRequest = Symbol('RegisterRequest');\nexport const RegisterFailure = Symbol('RegisterFailure');\nexport const RegisterSuccess = Symbol('RegisterSuccess');\n\nexport function register({email, displayName, password}) {\n  return (dispatch, getState) => {\n    dispatch({type: RegisterRequest});\n    \n    client.post('/api/register', {\n      email, displayName, password\n    }).then(response => {\n      dispatch({type: RegisterSuccess});\n    }).catch(error => {\n      dispatch({type: RegisterFailure, errors: error.response.data.errors});\n    });\n  }\n}\n\nexport const ConfirmRequest = Symbol('ConfirmRequest');\nexport const ConfirmFailure = Symbol('ConfirmFailure');\nexport const ConfirmSuccess = Symbol('ConfirmSuccess');\n\nexport function confirm({verificationToken}) {\n  return (dispatch, getState) => {\n    dispatch({type: ConfirmRequest});\n    \n    client.post('/api/confirm', {\n      verificationToken\n    }).then(response => {\n      dispatch({type: ConfirmSuccess, token: response.data.token});\n    }).catch(error => {\n      dispatch({type: ConfirmFailure, error: error.response.data.error});\n    });\n  }\n}\n\nexport const OAuthRequest = Symbol('OAuthRequest');\nexport const OAuthFailure = Symbol('OAuthFailure');\n\nexport function oauth({provider}) {\n  return (dispatch, getState) => {\n    dispatch({type: OAuthRequest});\n    \n    client.get(`/api/oauth/${provider}`)\n      .then(response => {\n        window.location.href = response.data.location;\n      })\n      .catch(error => {\n        dispatch({type: OAuthFailure, error: error.response.data.error});\n      });\n  }\n}\n\nexport const OAuthCallbackRequest = Symbol('OAuthCallbackRequest');\nexport const OAuthCallbackFailure = Symbol('OAuthCallbackFailure');\nexport const OAuthCallbackSuccess = Symbol('OAuthCallbackSuccess');\n\nexport function oauthCallback({provider, code}) {\n  return (dispatch, getState) => {\n    dispatch({type: OAuthCallbackRequest});\n    \n    client.post('/api/oauth_callback', {\n      provider\n    }, {\n      params: { code }\n    }).then(response => {\n      dispatch({type: OAuthCallbackSuccess, token: response.data.token});\n    }).catch(error => {\n      dispatch({type: OAuthCallbackFailure, error: error.response.data.error});\n    });\n  }\n}\n\nexport const FetchMeRequest = Symbol('FetchMeRequest');\nexport const FetchMeSuccess = Symbol('FetchMeSuccess');\nexport const FetchMeFailure = Symbol('FetchMeRequest');\n\nexport function fetchMe() {\n  return (dispatch, getState) => {\n    dispatch({type: FetchMeRequest});\n    \n    const state = getState();\n    const token = state.token;\n    \n    client.get('/api/me', {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(response => {\n      dispatch({type: FetchMeSuccess, data: response.data});\n    }).catch(error => {\n      if (error.response.status === 401) {\n        localStorage.removeItem('token');\n        window.location.reload(true);\n        return;\n      }\n      console.error(error.response.data);\n      dispatch({type: FetchMeFailure});\n    });\n  }\n}\n\nexport const FetchMessagesRequest = Symbol('FetchMessagesRequest');\nexport const FetchMessagesSuccess = Symbol('FetchMessagesSuccess');\nexport const FetchMessagesFailure = Symbol('FetchMessagesFailure');\n\nexport function fetchMessages() {\n  return (dispatch, getState) => {\n    dispatch({type: FetchMessagesRequest});\n    \n    const state = getState();\n    const token = state.token;\n    \n    client.get('/api/messages', {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(response => {\n      dispatch({type: FetchMessagesSuccess, messages: response.data.messages});\n    }).catch(error => {\n      if (error.response.status === 401) {\n        localStorage.removeItem('token');\n        window.location.reload(true);\n        return;\n      }\n      console.error(error.response.data);\n      dispatch({type: FetchMessagesFailure});\n    });\n  }\n}\n","import React, { useEffect, useState, useRef } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport io from 'socket.io-client';\nimport { fetchMessages, fetchMe } from '../store/actions';\n\nimport './Chat.css';\n\nexport const WebsocketConnected = Symbol('WebsocketConnected');\nexport const WebsocketDisconnected = Symbol('WebsocketDisconnected');\nexport const NewMessage = Symbol('NewMessage');\n\nlet socket = null;\n\nfunction Chat({token, me, messages, isWebsocketConnected, dispatch, fetchMessages, fetchMe}) {\n  const [message, setMessage] = useState('');\n  const chatHistory = useRef(null);\n  const messagesList = useRef(null);\n  \n  useEffect(() => {\n    socket = io(`?token=${token}`);\n\n    fetchMessages();\n    fetchMe();\n\n    socket.on('connect', () => {\n      dispatch({type: WebsocketConnected});\n    });\n\n    socket.on('disconnect', () => {\n      dispatch({type: WebsocketDisconnected});\n    });\n  \n    socket.on('user_message', message => {\n      dispatch({type: NewMessage, message});\n    });\n  }, []);\n\n  useEffect(() => {\n    chatHistory.current.scrollTop = messagesList.current.scrollHeight;\n  }, [messages]);\n  \n  function onSubmit(event) {\n    event.preventDefault();\n  \n    if (!isWebsocketConnected) return;\n    if (!message) return;\n\n    socket.emit('message', message);\n    setMessage('');\n  }\n  \n  return (\n    <main className=\"container\">\n      <div style={{minHeight: '100vh'}} className=\"row justify-content-center\">\n        <div className=\"col\" style={{display: 'flex', flexDirection: 'column'}}>\n          <div className=\"alert alert-info\">Состояние:\n            <span>{isWebsocketConnected ? ' подключен' : ' не подключен'}</span>\n          </div>\n\n          {!me.fetching &&\n            <p>name: {me.data.displayName}</p>\n          }\n\n          <div className=\"chat\">\n            <div className=\"chat-history\" ref={chatHistory}>\n              <ul className=\"messages\" ref={messagesList}>\n                {messages.fetching &&\n                  <div className=\"spinner-border\" role=\"status\"></div>\n                }\n                {!messages.fetching && messages.list.length === 0 &&\n                  <p className=\"text-muted\">Сообщений пока нет</p>\n                }\n\n                {messages.list.map(message => {\n                  return (\n                    <li className=\"clearfix\">\n                        <div className=\"message-data\">\n                          <span className=\"message-data-time\">{formatDate(message.date)}</span>\n                          <span class=\"message-data-name\">{message.user}</span>\n                        </div>\n                        <div className=\"message message-my\">{message.text}</div>\n                    </li>\n                  );\n                })}\n              </ul>\n\n              <form className=\"chat-message clearfix\" onSubmit={onSubmit}>\n                <textarea\n                  disabled={!isWebsocketConnected}\n                  value={message}\n                  onChange={event => setMessage(event.target.value)}\n                  placeholder=\"Введите ваше сообщение\" \n                  rows=\"3\" />\n                <button\n                  type=\"submit\"\n                  disabled={!isWebsocketConnected}>\n                  Отправить\n                </button>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n}\n\nfunction mapStateToProps(state) {\n  return {\n    token: state.token,\n    me: state.me,\n    messages: state.messages,\n    isWebsocketConnected: state.isWebsocketConnected\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    dispatch,\n    ...bindActionCreators({ fetchMessages, fetchMe }, dispatch)\n  };\n}\n\nfunction formatDate(date) {\n  const d = new Date(date);\n  return `${d.getHours()}:${d.getMinutes()}`;\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Chat);\n","import {\n  ConfirmFailure,\n  ConfirmRequest,\n  ConfirmSuccess,\n  LoginFailure,\n  LoginRequest,\n  LoginSuccess,\n  OAuthCallbackFailure,\n  OAuthCallbackRequest,\n  OAuthCallbackSuccess,\n  OAuthFailure,\n  OAuthRequest,\n  RegisterFailure,\n  RegisterRequest,\n  RegisterSuccess,\n  FetchMessagesSuccess, \n  FetchMessagesRequest,\n  FetchMessagesFailure,\n  FetchMeRequest,\n  FetchMeSuccess,\n  FetchMeFailure,\n} from './actions';\nimport {WebsocketConnected, WebsocketDisconnected, NewMessage} from '../components/Chat';\n\nconst token = localStorage.getItem('token') || null;\n\nconst initialState = {\n  token,\n  login: {\n    error: null,\n    processing: false,\n  },\n  registration: {\n    errors: null,\n    processing: false,\n    complete: false,\n  },\n  confirmation: {\n    error: null,\n    processing: false,\n  },\n  oauth: {\n    error: null,\n    processing: false,\n  },\n  oauthCallback: {\n    error: null,\n    processing: false,\n  },\n  isWebsocketConnected: false,\n  messages: {\n    fetching: false,\n    list: []\n  },\n  me: {\n    data: {},\n    fetching: false,\n  }\n};\n\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case LoginRequest:\n      return {\n        ...state,\n        login: { ...initialState.login, processing: true }\n      };\n    case LoginSuccess:\n      localStorage.setItem('token', action.token);\n      return {\n        ...state,\n        login: initialState.login,\n        token: action.token\n      };\n    case LoginFailure:\n      return {\n        ...state,\n        login: { ...initialState.login, error: action.error, processing: false }\n      };\n    case RegisterRequest:\n      return {\n        ...state,\n        registration: { ...initialState.registration, processing: true }\n      };\n    case RegisterSuccess:\n      return {\n        ...state,\n        registration: { ...initialState.registration, processing: false, complete: true, }\n      };\n    case RegisterFailure:\n      return {\n        ...state,\n        registration: { ...initialState.registration, errors: action.errors, processing: false }\n      };\n    case ConfirmRequest:\n      return {\n        ...state,\n        confirmation: { ...initialState.confirmation, processing: true }\n      };\n    case ConfirmSuccess:\n      localStorage.setItem('token', action.token);\n      return { ...state, confirmation: initialState.confirmation, token: action.token };\n    case ConfirmFailure:\n      return {\n        ...state,\n        confirmation: { ...initialState.confirmation, error: action.error, processing: false }\n      };\n    case OAuthRequest:\n      return {\n        ...state,\n        oauth: { ...initialState.oauth, processing: true }\n      };\n    case OAuthFailure:\n      return {\n        ...state, oauth: { ...initialState.oauth, error: action.error, processing: false }\n      };\n    case OAuthCallbackRequest:\n      return {\n        ...state,\n        oauthCallback: { ...initialState.oauthCallback, processing: true }\n      };\n    case OAuthCallbackFailure:\n      return {\n        ...state,\n        oauthCallback: { ...initialState.oauthCallback, error: action.error, processing: false }\n      };\n    case OAuthCallbackSuccess:\n      localStorage.setItem('token', action.token);\n      return { ...state, oauthCallback: initialState.oauthCallback, token: action.token };\n    case FetchMessagesRequest:\n      return {\n        ...state,\n        messages: {\n          ...state.messages,\n          fetching: true\n        }\n      };\n    case FetchMessagesSuccess:\n      return {\n        ...state,\n        messages: {\n          ...state.messages,\n          list: action.messages.concat(state.messages.list),\n          fetching: false\n        }\n      };\n    case FetchMessagesFailure:\n      return {\n        ...state,\n        messages: {\n          ...state.messages,\n          fetching: false,\n        }\n      };\n    case FetchMeRequest:\n      return {\n        ...state,\n        me: {\n          ...state.me,\n          data: {},\n          fetching: true,\n        }\n      };\n    case FetchMeSuccess:\n      return {\n        ...state,\n        me: {\n          ...state.me,\n          data: action.data,\n          fetching: false,\n        }\n      };\n    case FetchMeFailure:\n      return {\n        ...state,\n        me: {\n          ...state.me,\n          data: {},\n          fetching: false,\n        }\n      };\n    case WebsocketConnected:\n      return { ...state, isWebsocketConnected: true };\n    case WebsocketDisconnected:\n      return { ...state, isWebsocketConnected: false };\n    case NewMessage:\n      return {\n        ...state,\n        messages: {\n          ...state.messages,\n          list: state.messages.list.concat(action.message),\n          fetching: false\n        }\n      };\n    default:\n      return state;\n  }\n}\n","import { createStore, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport reducer from './reducer';\n\nexport default createStore(\n  reducer,\n  applyMiddleware(thunkMiddleware)\n);\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport Chat from './Chat';\n\nfunction Home({ token, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={() => !!token\n        ? <Chat />\n        : <Redirect to=\"/login\" /> } />\n  )\n}\n\nfunction mapStateToProps(state) {\n  return { token: state.token };\n}\n\nexport default connect(mapStateToProps)(Home);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { oauth } from '../store/actions';\n\nfunction SocialButtons({ oauth, oauthAction }) {\n  function getOAuthLink(provider) {\n    return () => oauthAction({provider});\n  }\n\n  return (\n    <div className=\"text-center\">\n      <p>или используйте социальные сети:</p>\n      \n      <button className=\"btn btn-link btn-lg text-info mx-2\" onClick={getOAuthLink('facebook')}>\n        <i className=\"fab fa-facebook-f\"/>\n      </button>\n      <button className=\"btn btn-link btn-lg text-info mx-2\" onClick={getOAuthLink('vkontakte')}>\n        <i className=\"fab fa-vk\"/>\n      </button>\n      <button className=\"btn btn-link btn-lg text-info mx-2\" onClick={getOAuthLink('github')}>\n        <i className=\"fab fa-github\"/>\n      </button>\n    </div>\n  );\n}\n\nfunction mapStateToProps(state) {\n  return { oauth: state.oauth };\n}\n\nconst mapDispatchToProps = { oauthAction: oauth };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SocialButtons);\n","import React, { useState } from 'react';\nimport SocialButtons from './SocialButtons';\n\nexport default function Form(props) {\n  const [state, changeState] = useState({});\n  \n  function setValue(event) {\n    changeState({\n      ...state,\n      [event.target.name]: event.target.value\n    });\n  }\n  \n  return (\n    <main className=\"container\">\n      <div className=\"row justify-content-center align-items-center\">\n        <div className=\"col col-md-6\">\n          <form\n            onSubmit={(event) => props.onSubmit(event, state)}\n            className=\"text-center border border-light p-5\"\n            noValidate>\n            \n            <p className=\"h4 mb-4\">{props.title}</p>\n            \n            {props.error && <p className=\"text-left text-danger\">{props.error}</p>}\n  \n            {props.fields.map(field => {\n              let inputClassname = \"form-control\";\n              if (props.errors) {\n                if (props.errors[field.name]) {\n                  inputClassname += \" is-invalid\";\n                } else {\n                  inputClassname += \" is-valid\";\n                }\n              }\n    \n              return (\n                <div className=\"form-row mb-4\" key={field.name} >\n                  <input\n                    value={state[field.name] || \"\"}\n                    onChange={setValue}\n                    type={field.type}\n                    name={field.name}\n                    required\n                    className={inputClassname}\n                    disabled={props.disabled}\n                    placeholder={field.placeholder} />\n                  {(props.errors && props.errors[field.name]) && (\n                    <div className=\"invalid-feedback text-left\">\n                      {props.errors[field.name]}\n                    </div>\n                  )}\n                </div>\n              );\n            })}\n\n            <button\n              disabled={props.disabled}\n              className=\"btn btn-info btn-block my-4\"\n              type=\"submit\">{props.button}</button>\n\n            <props.Footer />\n          </form>\n\n          <SocialButtons />\n        </div>\n      </div>\n    </main>\n  );\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect, Link } from 'react-router-dom';\n\nimport Form from './Form';\nimport { login } from '../store/actions';\n\nconst fields = [\n  {type: 'email', name: 'email', placeholder: 'email', icon: 'fa-at'},\n  {type: 'password', name: 'password', placeholder: 'пароль', icon: 'fa-key'},\n];\n\nfunction Login({token, login, loginAction}) {\n  if (token) return <Redirect to=\"/\" />;\n  \n  function onSubmit(event, fields) {\n    event.preventDefault();\n    if (login.processing) return;\n  \n    loginAction(fields);\n  }\n  \n  return (\n    <Form\n      disabled={login.processing}\n      title=\"Вход\"\n      validated={login.errors}\n      error={login.error}\n      onSubmit={onSubmit}\n      fields={fields}\n      button=\"Войти\"\n      Footer={() => (\n        <p>Еще нет аккаунта?&nbsp;\n          <Link to=\"/register\">Регистрация</Link>\n        </p>\n      )} />\n  );\n}\n\nfunction mapStateToProps(state) {\n  return { login: state.login, token: state.token };\n}\n\nconst mapDispatchToProps = { loginAction: login };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect, Link } from 'react-router-dom';\nimport { oauthCallback } from '../store/actions';\n\nconst providerMap = {\n  vkontakte: 'VK',\n  fb: 'Facebook',\n  github: 'Github',\n};\n\nfunction OAuthCallback({token, oauthCallback, oauthCallbackAction, match, location}) {\n  if (token) return <Redirect to=\"/\" />;\n  \n  const params = new URLSearchParams(location.search);\n  const provider = match.params.provider;\n  \n  useEffect(() => {\n    if (params.get('error')) return;\n    oauthCallbackAction({code: params.get('code'), provider});\n  }, []);\n\n  return (\n    <main className=\"container\">\n      <div className=\"row login-form justify-content-center align-items-center\">\n        <div className=\"col col-md-6\">\n          <div className=\"text-center border border-light p-5\">\n            <p className=\"h4 mb-4\">Логин через {providerMap[provider]}</p>\n  \n            {oauthCallback.error || params.get('error')\n              ? <React.Fragment>\n                <p className=\"text-danger\">При выполнени операции произошла ошибка.</p>\n                <p className=\"text-danger\">{oauthCallback.error || \"\"}</p>\n                <Link to=\"/\">Вход</Link>\n              </React.Fragment>\n              : <React.Fragment>\n                <p>Пожалуйста, подождите.</p>\n                <div className=\"spinner-border\" role=\"status\">\n                  <span className=\"sr-only\">Загрузка...</span>\n                </div>\n              </React.Fragment>\n            }\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n}\n\nfunction mapStateToProps(state) {\n  return { oauthCallback: state.oauthCallback, token: state.token };\n}\n\nconst mapDispatchToProps = { oauthCallbackAction: oauthCallback };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OAuthCallback);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nimport Form from './Form';\nimport { register } from '../store/actions';\n\nconst fields = [\n  {type: 'email', name: 'email', placeholder: 'email', icon: 'fa-at'},\n  {type: 'text', name: 'displayName', placeholder: 'имя', icon: 'fa-user'},\n  {type: 'password', name: 'password', placeholder: 'пароль', icon: 'fa-key'},\n];\n\nfunction Register({registration, registerAction}) {\n  if (registration.complete) {\n    return (\n      <main className=\"container\">\n        <div className=\"row login-form justify-content-center align-items-center\">\n          <div className=\"col col-md-6\">\n            <div className=\"text-center border border-light p-5\">\n              <p className=\"h4 mb-4\">Поздравляем, вы зарегистрированы!</p>\n              \n              <p>На указанную вами почту отправлено письмо.</p>\n              <p>Для завершения регистрации, пожалуйста, перейдите по ссылке из этого письма.</p>\n            </div>\n          </div>\n        </div>\n      </main>\n    );\n  }\n  \n  function onSubmit(event, fields) {\n    event.preventDefault();\n    if (registration.processing) return;\n  \n    registerAction(fields);\n  }\n  \n  return (\n    <Form\n      disabled={registration.processing}\n      title=\"Регистрация\"\n      validated={registration.errors}\n      errors={registration.errors}\n      onSubmit={onSubmit}\n      fields={fields}\n      button=\"Создать аккаунт\"\n      Footer={() => (\n        <p>Уже есть аккаунт?&nbsp;\n          <Link to=\"/login\">Вход</Link>\n        </p>\n      )} />\n  );\n}\n\nfunction mapStateToProps(state) {\n  return { registration: state.registration };\n}\n\nconst mapDispatchToProps = { registerAction: register };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Register);\n\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect, Link } from 'react-router-dom';\nimport { confirm } from '../store/actions';\n\nfunction Confirm({token, confirmation, confirmAction, match}) {\n  if (token) return <Redirect to=\"/\" />;\n  \n  useEffect(() => {\n    confirmAction({verificationToken: match.params.verificationToken});\n  }, []);\n\n  return (\n    <main className=\"container\">\n      <div className=\"row login-form justify-content-center align-items-center\">\n        <div className=\"col col-md-6\">\n          <div className=\"text-center border border-light p-5\">\n            <p className=\"h4 mb-4\">Подтверждение почтового адреса</p>\n  \n            {confirmation.error\n              ? <React.Fragment>\n                <p className=\"text-danger\">При выполнени операции произошла ошибка.</p>\n                <p className=\"text-danger\">{confirmation.error}</p>\n                <Link to=\"/\">Вход</Link>\n              </React.Fragment>\n              : <React.Fragment>\n                <p>Почтовый адрес подтверждается, пожалуйста, подождите.</p>\n                <div className=\"spinner-border\" role=\"status\">\n                  <span className=\"sr-only\">Загрузка...</span>\n                </div>\n              </React.Fragment>\n            }\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n}\n\nfunction mapStateToProps(state) {\n  return { confirmation: state.confirmation, token: state.token };\n}\n\nconst mapDispatchToProps = { confirmAction: confirm };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Confirm);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter, Route } from 'react-router-dom';\n\nimport * as serviceWorker from './serviceWorker';\nimport store from './store';\nimport Home from './components/Home';\nimport Login from './components/Login';\nimport OAuthCallback from './components/OAuthCallback';\nimport Register from './components/Register';\nimport Confirm from './components/Confirm';\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <Route exact path=\"/\" component={Home} />\n      <Route path=\"/login\" component={Login} />\n      <Route path=\"/oauth/:provider\" component={OAuthCallback} />\n      <Route path=\"/register\" component={Register} />\n      <Route path=\"/confirm/:verificationToken\" component={Confirm} />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}